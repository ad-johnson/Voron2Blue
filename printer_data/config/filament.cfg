
#####################################################################
#   Handles loading/unloading of filament.  Based on jschuh's macros:
# https://github.com/jschuh/klipper-macros/blob/main/filament.cfg
#####################################################################

[gcode_macro _load_unload]
gcode:
  {% set EXTRUDER = printer.toolhead.extruder %}
  {% set current_temp = printer[EXTRUDER].target %}  # Track current target to return to after load/unload
#  {% set EXTRUDER = params.EXTRUDER|default(saved_extruder)|lower %}
  {% set mv = printer["gcode_macro MY_VARIABLES"] %}
 
  # Use the global min as default if provided, else use per extruder min + 5.
  {% set default_minimum = mv.load_min_temp if mv.load_min_temp else
         (printer.configfile.settings[EXTRUDER].min_extrude_temp + 5) %}
  {% if 'MINIMUM' in params %}
    {% set MINIMUM = params.MINIMUM|int %}
  # This is the special case for a filament change after an idle timeout.
  {% elif printer.pause_resume.is_paused and printer[EXTRUDER].target == 0 and
          printer["gcode_macro resume"].etemp %}
    {% set MINIMUM = printer["gcode_macro resume"].etemp %}
  # Use the target temp if higher than the default.
  {% elif printer[EXTRUDER].target > default_minimum %}
    {% set MINIMUM = printer[EXTRUDER].target %}
  {% else %}
    {% set MINIMUM = default_minimum %}
  {% endif %}
  {% if MINIMUM < printer.configfile.settings[EXTRUDER].min_extrude_temp %}
    { action_raise_error("Extrude below minimum temp.") }
  {% elif printer.pause_resume.is_paused %}
    # Clear the saved E if we're (un-)loading while paused.
    SET_GCODE_VARIABLE MACRO=resume VARIABLE=saved_e VALUE="{0.0}"
  {% endif %}
  
  {% set SPEED = params.SPEED|default(mv.load_speed)|int %}
  {% set priming_length = mv.load_priming_length %}
  {% set LENGTH = params.LENGTH|default(mv.load_length)|float - priming_length%}
  {% if LENGTH < 0 %}
    {% set priming_length = (priming_length + LENGTH, 0)|max %}
    {% set LENGTH = 0 %}
  {% endif %}
  
  SAVE_GCODE_STATE NAME=_LOAD_UNLOAD

  {% if not printer.extruder.can_extrude or
        printer[EXTRUDER].target < default_minimum %}
    M118 Preheating {EXTRUDER} to {MINIMUM}c
    M109 S{MINIMUM}
  {% endif %}
  M83
  {% set priming_speed = (mv.load_priming_speed, SPEED)|min %}
  {% if params.LOAD|int %}
    G0 E{LENGTH} F{SPEED}
    G0 E{priming_length} F{priming_speed}
    G0 E{'%.4f' % -printer["gcode_macro resume"].saved_e} F{mv.load_speed}
  {% else %}
    {% set pre_prime_distance = 5.0 %}
    {% set shaping_moves = 5 %}
    {% set shaping_distance = (shaping_moves * (1 + shaping_moves)/20) %}
    # Push forward to heat up, then retract to the edge of the meltzone.
    G0 E{pre_prime_distance} F{SPEED}
    G4 P500
    G0 E{'%.4f' % -(priming_length - shaping_distance)} F{SPEED}
    # Shape the tip with a pairs of short extrusions and retractions, where
    # the retractions get increasingly longer than the extrusion.
    {% for i in range(1, shaping_moves + 1) %}
      G0 E2 F{priming_speed}
      G0 E-{2 + (0.1 * i)} F{priming_speed}
    {% endfor %}
    # Retract the rest of the length.
    G0 E{'%.4f' % -(LENGTH + pre_prime_distance)} F{SPEED}
  {% endif %}

  M109 S{current_temp}  # Return to previous extruder temperature
  
  RESTORE_GCODE_STATE NAME=_LOAD_UNLOAD

  
#####################################################################
#   Loads filament.  Can only be called when not printing or paused
#####################################################################
[gcode_macro LOAD_PLA]
gcode:
  LOAD_FILAMENT MINIMUM=220

[gcode_macro LOAD_ABS]
gcode:
  LOAD_FILAMENT MINIMUM=240

[gcode_macro LOAD_FILAMENT]
gcode:
  {% if (not(printer.idle_timeout.state == "Printing") or printer.pause_resume.is_paused) %}         # Only load if not printing
    M118 Loading filament
    {% if 'MINIMUM' in params %}
      _LOAD_UNLOAD LOAD=1 MINIMUM=params.MINIMUM
    {% else %}
      _LOAD_UNLOAD LOAD=1
    {% endif %}
    M118 Filament loaded
  {% else %}
    M118 Printer is busy, cannot load filament
  {% endif %}


#####################################################################
#   Unloads filament.  Can only be called when not printing or paused
#####################################################################

[gcode_macro UNLOAD_PLA]
gcode:
  UNLOAD_FILAMENT MINIMUM=220

[gcode_macro UNLOAD_ABS]
gcode:
  UNLOAD_FILAMENT MINIMUM=240

[gcode_macro UNLOAD_FILAMENT]
gcode:
  {% if (not(printer.idle_timeout.state == "Printing") or printer.pause_resume.is_paused) %}         # Only load if not printing
    M118 Unloading filament
    {% if 'MINIMUM' in params %}
      _LOAD_UNLOAD LOAD=0 MINIMUM=params.MINIMUM
    {% else %}
      _LOAD_UNLOAD LOAD=0
    {% endif %}
    M118 Filament unloaded
  {% else %}
    M118 Printer is busy, cannot unload filament
  {% endif %}

